var _user$project$Main$viewChatMessage = function (_p0) {
	var _p1 = _p0;
	var _p2 = _p1.owner;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'eliza-chat-message-container', _1: true},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'user-message-container',
							_1: _elm_lang$core$Native_Utils.eq(_p2, 'User')
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'eliza-message-container',
								_1: _elm_lang$core$Native_Utils.eq(_p2, 'Eliza')
							},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'chat-message', _1: true},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'user-message',
									_1: _elm_lang$core$Native_Utils.eq(_p2, 'User')
								},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'eliza-message',
										_1: _elm_lang$core$Native_Utils.eq(_p2, 'Eliza')
									},
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(_p1.message),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$onEnter = function (msg) {
	var isEnter = function (code) {
		return _elm_lang$core$Native_Utils.eq(code, 13) ? _elm_lang$core$Json_Decode$succeed(msg) : _elm_lang$core$Json_Decode$fail('not ENTER');
	};
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$andThen, isEnter, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		messages: {ctor: '[]'},
		input: ''
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$ChatMessage = F2(
	function (a, b) {
		return {owner: a, message: b};
	});
var _user$project$Main$ElizaMessage = function (a) {
	return {message: a};
};
var _user$project$Main$elizaMessageDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'message',
	_elm_lang$core$Json_Decode$string,
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$ElizaMessage));
var _user$project$Main$Model = F2(
	function (a, b) {
		return {messages: a, input: b};
	});
var _user$project$Main$NoOp = {ctor: 'NoOp'};
var _user$project$Main$InputAdd = function (a) {
	return {ctor: 'InputAdd', _0: a};
};
var _user$project$Main$FetchElizaMessage = function (a) {
	return {ctor: 'FetchElizaMessage', _0: a};
};
var _user$project$Main$fetchElizaMessage = function (userMessage) {
	return A2(
		_elm_lang$core$Platform_Cmd$map,
		_user$project$Main$FetchElizaMessage,
		_krisajenkins$remotedata$RemoteData$sendRequest(
			A2(
				_elm_lang$http$Http$get,
				A2(
					_elm_lang$core$Basics_ops['++'],
					'http://localhost:5000/query',
					A2(_elm_lang$core$Basics_ops['++'], '?q=', userMessage)),
				_user$project$Main$elizaMessageDecoder)));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'UserMessage':
				var input = model.input;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							messages: A2(
								_elm_lang$core$List$append,
								model.messages,
								{
									ctor: '::',
									_0: {owner: 'User', message: input},
									_1: {ctor: '[]'}
								}),
							input: ''
						}),
					_1: _user$project$Main$fetchElizaMessage(input)
				};
			case 'FetchElizaMessage':
				var _p4 = _p3._0;
				switch (_p4.ctor) {
					case 'NotAsked':
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					case 'Loading':
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					case 'Success':
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									messages: A2(
										_elm_lang$core$List$append,
										model.messages,
										{
											ctor: '::',
											_0: {owner: 'Eliza', message: _p4._0.message},
											_1: {ctor: '[]'}
										})
								}),
							_1: A2(
								_elm_lang$core$Task$attempt,
								function (_p5) {
									return _user$project$Main$NoOp;
								},
								_elm_lang$dom$Dom_Scroll$toBottom('eliza-chat-container'))
						};
					default:
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'InputAdd':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{input: _p3._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$UserMessage = {ctor: 'UserMessage'};
var _user$project$Main$view = function (_p6) {
	var _p7 = _p6;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('eliza-chat-outer-container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('eliza-chat-header-container'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Send messages to Eliza'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$map,
					_elm_lang$core$Basics$never,
					A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('eliza-chat-container'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id('eliza-chat-container'),
								_1: {ctor: '[]'}
							}
						},
						A2(_elm_lang$core$List$map, _user$project$Main$viewChatMessage, _p7.messages))),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('eliza-chat-input-container'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _user$project$Main$onEnter(_user$project$Main$UserMessage),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$InputAdd),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(_p7.input),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('eliza-chat-input'),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		update: _user$project$Main$update,
		subscriptions: function (_p8) {
			return _elm_lang$core$Platform_Sub$none;
		},
		view: _user$project$Main$view
	})();
